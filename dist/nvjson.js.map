{"version":3,"sources":["webpack://NVJSON/webpack/universalModuleDefinition","webpack://NVJSON/webpack/bootstrap","webpack://NVJSON/./node_modules/ndtreejs/cmmn.js","webpack://NVJSON/./node_modules/ndtreejs/ndfunc.js","webpack://NVJSON/./node_modules/ndtreejs/index.js","webpack://NVJSON/./node_modules/ndtreejs/util.js","webpack://NVJSON/./index.js","webpack://NVJSON/./jsfunc.js","webpack://NVJSON/./node_modules/ndtreejs/ndcls.js","webpack://NVJSON/./node_modules/ndtreejs/event-target.js","webpack://NVJSON/./node_modules/ndtreejs/ndfuncterm.js","webpack://NVJSON/(webpack)/node_modules/util/util.js","webpack://NVJSON/(webpack)/node_modules/process/browser.js","webpack://NVJSON/(webpack)/node_modules/util/support/isBufferBrowser.js","webpack://NVJSON/(webpack)/node_modules/util/node_modules/inherits/inherits_browser.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dict_length","entries","gen_guid","replace","Math","random","toString","range","si","ei","Array","from","length","map","v","seqs_slct","seqs","arr","filter","includes","is_empty_dict","dict_values","dict_keys","dict_map","f","k","dict_foreach","dict_plus","d0","d1","dict_update","dtb_kv_rm","dtb","dtb_kv_get_seq","findIndex","dcp","JSON","parse","stringify","mat_map","map_func","lyr","j","cmmn","calc_next_id","nodes","ids","max","is_id","update_one_nodeid","nd","idplus","_id","_tree","_fstch","_lsib","_rsib","_parent","update_nodes_ids","nodes0","nodes1","next_id","id","nnd","is_root","cond0","undefined","cond1","is_fstch","is_lstch","is_leaf","is_lonely","get_children","get_parent","prepend_child","child","cond","old_fstch","append_child","old_lstch","get_lstch","add_rsib","rsib","console","log","add_lsib","lsib","parent","get_lsib","insert_child","which","children","lngth","update_treeid","cnodes","update_disconnected_nodes","nsdfs","get_sdfs","treeid","forEach","update_orig_nodes","nnodes","leafize","rootize","disconnect","get_rsib","get_fstch","push","get_which_child","get_some_children","whiches","some","get_lstsib","including_self","lstrsib","get_sibs","sibs","seq","get_depth","get_ances","get_height","depth","des_depths","get_lyr","sdfs","get_root","get_breadth","lst_parent","ances","unshift","get_rsib_of_fst_ance_having_rsib","get_sdfs_next","fstch","get_drmost_des","lstch","nd_depth","get_dlmost_des","get_edfs_next","get_lsib_of_fst_ance_having_lsib","get_edfs","edfs","nxt","clear_$visited","_$visited","get_sedfs_next","visited","is_sedfs_traverse_finished","start_id","get_sedfs","deepcopy","clear","sedfs","_nd2unhandled_ele","ele","_children","sdfs2mat","unhandled","_pbreadth","next_unhandled","_breadth","_depth","index","concat","sdfs2edfs","sdfs2sedfs","edfs2sdfs","sedfs2sdfs","get_deses","deses","splice","get_root_via_tree","tree","creat_root","creat_nd","is_inited","get_fstsib","get_preceding_sibs","get_following_sibs","get_which_sib","get_some_sibs","get_sibseq","get_count","get_fst_lyr_des_depth","get_lst_lyr_des_depth","get_which_lyr_des_depth","get_which_ance","get_some_ances","get_sdfs_prev","get_edfs_prev","get_sedfs_prev","get_fst_lyr_deses","get_lst_lyr_deses","get_which_lyr_deses","get_some_deses","get_which_deses","nd2ele","edfs2mat","edfs2sedfs","sedfs2mat","sedfs2edfs","rm_fstch","rm_lstch","rm_which","rm_some","whices","rm_all","prepend_child_tree","append_child_tree","add_rsib_tree","add_lsib_tree","insert_child_tree","tree2sdfs","ndcls","ndfunc","ndfuncterm","ndutil","fs","rjson","fn","readFileSync","wjson","js","writeFileSync","jsfunc","Tree","util","get_jobj_type","isPrimitive","is_raw_type_via_str","get_jobj_child_klvl","kl","vl","jobj2tree","rt","type","val","obj","ndch","$append_child","get_pl","$ances","reverse","slice","get_flat_key","pl","flatten_to_entries","$sdfs","pls","vals","is_valid_dot_key","indexOf","is_valid_pl_for_dot","every","entries_to_dot_entries","entry","join","is_valid_pl_for_nondot","flatten_to_dot_entries","set_dict_via_pl","deflatten_from_entries","_reorder_entries_by_pl_length","sort","a","b","get_container_or_val_via_nd","tree2kjobj","kjobj","nd2vjobj","get_vmat_nonleaf_children","ele_children","vjobj_children","el","vjobj","tree2vjobj","mat","$sdfs2mat","runhandled","loc","_nd","ch","set_dflt_dict_via_pl","dict","get_val_via_pl","get_bracket_pl","is_valid_nondot_key","dot_entries_to_entries","split","flatten_to_dict","jobj","flatten_to_dot_dict","deflatten_from_dot_entries","deflatten_from_dict","flat_dict","reorder","deflatten_from_dot_dict","eq","j0","j1","assert","deepStrictEqual","e","struct_eq","tree0","tree1","tree2jobj","unzip","schema","vmat","zip","k_entries","v_entries","EventTarget","STRUCT_KEYS","_is_root","_lstch","oldch","_which_child","_some_children","_lstsib","oldrsib","_fstsib","fstsib","_psibs","psibs","sib","_fsibs","fsibs","_sibs","me","_sibseq","_ances","ance","$parent","_deses","drmost","_drmost_des","_sdfs","_prepend_child","$is_leaf","_append_child","$lstch","_add_rsib","$is_root","$is_lstch","_insert_child","$depth","$sdfs_next","_sedfs_next","$visited","$rsib","$fstch","_is_sedfs_traverse_finished","startnd","_sedfs","_clear_visited","st","Set","has","$close_at","$open_at","add","_rootize","_update_disconnected_nodes","_disconn","$is_lonely","_leafize","$is_fstch","$lsib","_Node","super","$guid","$sibs","indexes","old","_load","_dump","dup","$clone","$rsib_of_fst_ance_having_rsib","$drmost_des","$dlmost_des","$lsib_of_fst_ance_having_lsib","$edfs_next","$root","$edfs","dlmost","offset","$deses","rel_depths","abs_depths","$lyr","luncle","$luncle","runcle","$runcle","repeat","indent","_set_id","ndict","$children","_get_ancend_via_id","fill_other_attrs_for_load","other_ks","get_non_struct_keys","_guid","_rtjson2rt","prnd","prnj","nj","$prepend_child","$add_rsib","_dictize_nd_property","nodes_dict","fill_other_attrs_for_dump","ndindex","this_index","indexof","$sibseq","load","Node","Root","clone","$dump","m0","m1","flat0","flat1","ele0","ele1","callback","options","event","dflt_sdfs_show_connd","dflt_edfs_show_connd","dflt_calc_conn_map_func","conn","rslt","conns2repr","conns","show_connd","clear_ui","_ui","dflt_sdfs_calc_conns","display","get_sdfs_repr_arr","conns_array","dflt_sdfs_show_callback","dflt_edfs_show_callback","dflt_edfs_calc_conns","get_edfs_repr_arr","dflt_sedfs_show_connd","stag_prefix","stag_suffix","etag_prefix","etag_suffix","gen_tag","tag","prefix","suffix","sdfs_show_all","repr","sdfs_show_root_tree","sdfs_show_from","sdfs_show_to","to","sdfs_show_from_to","sdfs_expand","sdfs_foldup","edfs_show_all","edfs_show_root_tree","edfs_show_from","edfs_show_to","edfs_show_from_to","sedfs_show_all","depths","indents","getOwnPropertyDescriptors","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","isString","objects","arguments","inspect","args","len","str","String","x","Number","_","isNull","isObject","deprecate","msg","process","noDeprecation","apply","warned","throwDeprecation","Error","traceDeprecation","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","output","base","braces","isArray","toUTCString","formatProperty","match","formatArray","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","line","substr","ar","arg","re","objectToString","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","isNullOrUndefined","isSymbol","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor"],"mappings":"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","file":"nvjson.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NVJSON\"] = factory();\n\telse\n\t\troot[\"NVJSON\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nfunction gen_guid() {\n    return(\n        'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function(c) {\n                let r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8)\n                return(v.toString(16))\n            }\n         )\n    )\n}\n\n\n\nfunction range(si,ei) {\n    return(Array.from({ length: ei-si }).map((v, i) => i + si))\n}\n\nfunction seqs_slct(seqs,arr) {\n    return(arr.filter((r,i)=>(seqs.includes(i))))\n}\n\n\nfunction dict_length(d) {\n    return(Object.entries(d).length)\n}\n\nfunction is_empty_dict(d) {\n    return(Object.entries(d).length === 0)\n}\n\nfunction dict_values(d) {\n    let entries = Object.entries(d)\n    let values = entries.map(r=>r[1])\n    return(values)\n}\n\nfunction dict_keys(d) {\n    let entries = Object.entries(d)\n    let keys = entries.map(r=>r[0])\n    return(keys)\n}\n\nfunction dict_length(d) {\n    let entries = Object.entries(d)\n    return(entries.length)\n}\n\nfunction dict_foreach(d,f) {\n    for(let k in d) {\n        f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_map(d,f) {\n    for(let k in d) {\n        d[k] = f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_plus(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        d0[k] =d1[k]\n    }\n    return(d0)    \n}\n\nfunction dict_update(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        let cond = !(k in d0)\n        if(cond) {\n            d0[k] =d1[k]\n        }    \n    }\n    return(d0)\n}\n\n\n\nfunction dtb_kv_rm(k,v,dtb) {\n    dtb = dtb.filter(r=>(r[k]!==v))\n    return(dtb)\n}\n\nfunction dtb_kv_get_seq(k,v,dtb) {\n    let seq = dtb.findIndex(r=>r[k]===v)\n    return(seq)\n}\n\nfunction dcp(o) {\n    return(JSON.parse(JSON.stringify(o)))\n}\n\nfunction mat_map(m,map_func) {\n    for(let i=0;i<m.length;i++) {\n        lyr = m[i]\n        for(let j=0;j<lyr.length;j++) {\n            m[i][j] = map_func(m[i][j],i,j)\n        } \n    }\n    return(m)\n}\n\n\nmodule.exports = {\n    gen_guid:gen_guid,\n    range:range,\n    seqs_slct:seqs_slct,\n    dict_length:dict_length,\n    is_empty_dict:is_empty_dict,\n    dict_values:dict_values,\n    dict_keys:dict_keys,\n    dict_map:dict_map,\n    dict_foreach:dict_foreach,\n    dict_length:dict_length,\n    dict_plus,\n    dict_update,\n    dtb_kv_rm,\n    dtb_kv_get_seq,\n    dcp:dcp,\n    mat_map:mat_map,\n}\n","//\nconst cmmn = require(\"./cmmn.js\")\n\n//tree ndict nodes nnodes same\n\n//util\n\n\n\nfunction calc_next_id(nodes) {\n    if(cmmn.is_empty_dict(nodes)){\n        return(0)\n    } else {\n        let ids = cmmn.dict_keys(nodes)\n        return(Math.max(...ids)+1)\n    }\n}\n\nfunction is_id(n) {\n    let cond = ((n !== null) && (n !== undefined))\n    return(cond) \n}\n\nfunction update_one_nodeid(nd,idplus) {\n    nd._id = nd._id + idplus\n    nd._tree = nd._tree + idplus\n    if(is_id(nd._fstch)) {\n         nd._fstch = nd._fstch + idplus\n    }\n    if(is_id(nd._lsib)) {\n         nd._lsib = nd._lsib + idplus\n    }\n    if(is_id(nd._rsib)) {\n         nd._rsib = nd._rsib + idplus\n    }\n    if(is_id(nd._parent)) {\n         nd._parent = nd._parent + idplus    \n    } \n    return(nd)        \n}\n\n\nfunction update_nodes_ids(nodes0,nodes1) {\n    let next_id = calc_next_id(nodes0)\n    for(let id in nodes1) {\n        let nnd = update_one_nodeid(nodes1[id],next_id) \n        nodes1[nnd._id] = nnd\n        delete nodes1[id]\n    }\n    return(nodes1)\n}\n\n//\n\nfunction creat_root(n=0){\n    let _id = n\n    let root = {\n        _id:_id,\n        _fstch:null,\n        _lsib:null,\n        _rsib:null,\n        _parent:null,\n        _tree:_id  //属于哪个tree\n    }\n    return(root)\n}\n\n\nfunction creat_nd(nodes,n=0) {\n    /*\n        by_dflt  leaf_nd\n    */\n    let _id = calc_next_id(nodes)+n\n    let nd = {\n        _id:_id,\n        _fstch:null,\n        _lsib:undefined,\n        _rsib:undefined,\n        _parent:undefined,\n        _tree:undefined\n    }\n    return(nd)\n}\n\n\n//\n\nfunction is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction is_root(nd) {\n    //tree 是自己\n    let cond0 = (nd._tree!== undefined)\n    let cond1 = (nd._tree === nd._id)\n    return(cond0 && cond1)\n}\n\nfunction is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\nfunction is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\nfunction is_lonely(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        return(true)\n    } else {\n        let parent = get_parent(nd,nodes)\n        let children = get_children(parent,nodes)\n        return(children.length === 1)  \n    } \n}\n\n/*\nfunction eq(nd0,nd1) {\n    //id 必须完全一致\n    //只有同一颗树下自己等于自己\n    let cond0 = (nd0._id === nd1._id)\n    let cond1 = (nd0._tree === nd1._tree)\n    return(cond0 && cond1)\n}\n*/\n\n//\n\nfunction prepend_child(nd,child,nodes) {\n    //只有根节点才可以被链接到另一颗树上\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd._id\n    } else {\n        //变更old_fstch\n        let old_fstch = nodes[nd._fstch]\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch._id\n        //添加child\n    }\n    nd._fstch = child._id\n    nodes[child._id] = child\n    //返回当前节点\n    return(nd)\n}\n\n\nfunction append_child(nd,child,nodes) {\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child._id\n        child._lsib = null\n    } else {\n        //变更old_lstch\n        let old_lstch = get_lstch(nd,nodes)\n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child._id\n    }\n    child._parent = nd._id\n    nodes[child._id] = child\n    return(nd)\n}\n\nfunction add_rsib(nd,rsib,nodes) {\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_lstch(nd)\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n    }\n    nd._rsib = rsib._id\n    nodes[rsib._id] = rsib\n    return(nd)\n}\n\nfunction add_lsib(nd,lsib,nodes) {\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_fstch(nd)\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = get_parent(nd,nodes)\n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib._id\n    } else {\n        let old_lsib = get_lsib(nd,nodes)\n        old_lsib._rsib = lsib._id\n    }\n    lsib._rsib = nd._id\n    nodes[lsib._id] = lsib\n    return(nd)\n}\n\nfunction insert_child(which,nd,child,nodes) {\n    let children = get_children(nd,nodes)\n    let lngth = children.length\n    if(lngth ===0) {\n        return(prepend_child(nd,child,nodes))\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n            return(nd)\n        } else {\n            if(which === 0) {\n                return(prepend_child(nd,child,nodes))\n            } else if(which === lngth) {\n                return(append_child(nd,child,nodes))\n            } else {\n                let lnd = children[which-1]\n                return(add_rsib(lnd,child,nodes))\n            }\n        }\n    }\n}\n\n\nfunction update_treeid(nd,cnodes) {\n    for(let id in cnodes) {\n        cnodes[id]._tree = nd._tree\n    }\n}\n\n\n/*tree*/\n\nfunction prepend_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = prepend_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction append_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = append_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_rsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_rsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_lsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_lsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction insert_child_tree(which,nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = insert_child(which,nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\n\n/*tree*/\n\nfunction update_disconnected_nodes(nd,nodes) {\n    let nsdfs = get_sdfs(nd,nodes)\n    let treeid = nsdfs[0]._id\n    nsdfs.forEach(\n       nd=> {\n           nd._tree =treeid \n       }\n    ) \n    return(nsdfs)\n}\n\nfunction update_orig_nodes(nsdfs,nodes) {\n    let nnodes = {}\n    nsdfs.map(\n        nd => {\n            let id = nd._id\n            nnodes[id] = nd\n            delete nodes[id]\n        }\n    )\n    return(nnodes)  \n}\n\n\nfunction leafize(nd) {\n    nd._fstch = null\n    //nd._lsib = null\n    //nd._rsib = null\n    return(nd)\n}\n\nfunction rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd) \n}\n\n\nfunction disconnect(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        //do nothing\n        return([nd,nodes])\n    } else if(is_lonely(nd,nodes)) {\n        //\n        let parent =  nodes[nd._parent]\n        leafize(parent);\n        let nsdfs = update_disconnected_nodes(nd,nodes);\n        let nnodes = update_orig_nodes(nsdfs,nodes)\n        rootize(nd);\n        //\n        return([nd,nnodes])         \n    } else {\n        if(is_fstch(nd)) {\n            //节点变味新树的根节点\n            let rsib = get_rsib(nd,nodes)\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            //rsib._parent = nd._parent fstch的parent不需要改变\n            // parent 的fstch 要指向rsib\n            let parent = get_parent(nd,nodes) \n            parent._fstch = nd._rsib  \n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])             \n        } else if(is_lstch(nd)) {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes) \n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        } else {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        }\n    }   \n}\n\n//在父节点上操作\nfunction rm_fstch(nd,nodes) {\n    let fstch = get_fstch(nd,nodes)\n    if(fstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(fstch,nodes))\n    }\n}\n\nfunction rm_lstch(nd,nodes) {\n    let lstch = get_lstch(nd,nodes)\n    if(lstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(lstch,nodes))\n    }\n}\n\nfunction rm_which(index,nd,nodes) {\n    let child = get_which_child(index,nd,nodes)\n    if(child===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(child,nodes))\n    }     \n}\n\nfunction rm_some(nd,nodes,...whices) {\n    let some = get_some_children(nd,nodes,...whiches) \n    for(let i=0;i<some.length;i++) {\n        disconnect(some[i],nodes)\n    }\n    return([nd,nodes])\n}\n\nfunction rm_all(nd,nodes) {\n    let children = get_children(nd,nodes)\n    for(let i=0;i<children.length;i++) {\n        disconnect(children[i],nodes)\n    }\n    return(nodes)\n}\n\n/**/\n\n//child\n\nfunction get_fstch(nd,nodes) {\n    let fstch = (nd._fstch===null)?null:nodes[nd._fstch]\n    return(fstch)\n}\n\n\nfunction get_children(nd,nodes){\n    let children = []\n    let child = get_fstch(nd,nodes)\n    while(child!==null){\n        children.push(child)\n        child = get_rsib(child,nodes)\n    }\n    return(children)\n}\n\nfunction get_lstch(nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        return(children[children.length-1])\n    }\n}\n\nfunction get_which_child(which,nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        let cond = (which>children.length-1) || (which <0)\n        if(cond){\n            return(null)\n        } else {\n            return(children[which])\n        }\n    }\n}\n\nfunction get_some_children(nd,nodes,...whiches) {\n    let children = get_children(nd,nodes)\n    let some = []\n    if(children.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>children.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(children[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n////sibs\nfunction get_lstsib(nd,nodes,including_self=false) {\n    let lstrsib = nd\n    let rsib = get_rsib(nd,nodes)\n    while(rsib!==null) {\n        lstrsib = rsib\n        rsib = get_rsib(rsib,nodes)\n    }\n    if(including_self){\n        return(lstrsib)\n    } else {\n        if(lstrsib._id !== nd._id) {\n            return(lstrsib)\n        } else {\n            return(null)\n        }\n    }\n}\n\n\nfunction get_preceding_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i<seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_following_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i>seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibs(nd,nodes,including_self=false) {\n    let parent = get_parent(nd,nodes)\n    let sibs;\n    if(parent !== null) { \n        sibs = get_children(parent,nodes)\n    } else {\n        sibs =[nd]\n    }\n    if(including_self) {\n        return(sibs)\n    } else {\n        sibs = cmmn.dtb_kv_rm('_id',nd._id,sibs)\n    }\n    return(sibs)\n}\n\nfunction get_fstsib(nd,nodes,including_self=false) {\n    let sibs = get_sibs(nd,nodes,true)\n    if(including_self) {\n        return(sibs[0])\n    } else {\n        if(sibs[0]._id === nd._id) {\n            return(null)\n        } else {\n            return(sibs[0])\n        }\n    }\n}\n\n\nfunction get_which_sib(which,nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let lngth = sibs.length\n    let cond = (which<=lngth-1) && (which >=0)\n    if(cond) {\n        return(sibs[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_sibs(nd,nodes,...whiches) {\n    let sibs = get_sibs(nd,nodes,true)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>sibs.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(sibs[which])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibseq(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    return(seq)\n}\n\nfunction get_lsib(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    if(seq === 0) {\n        return(null)\n    } else {\n        return(sibs[seq-1])\n    }\n}\n\nfunction get_rsib(nd,nodes) {\n    let rsib = (nd._rsib===null)?null:nodes[nd._rsib]\n    return(rsib)\n}\n\n//layer\n\nfunction get_depth(nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    return(ances.length-1)\n}\n\nfunction get_height(nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let sdfs = get_sdfs(nd,nodes)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    return(max-depth+1)\n}\n\nfunction get_fst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        return(depth+1)\n    }\n}\n\nfunction get_lst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        let sdfs = get_sdfs(nd,nodes)\n        let des_depths = sdfs.map(r=>get_depth(r,nodes))\n        let max = Math.max(...des_depths)\n        return(max)\n    }\n}\n\nfunction get_which_lyr_des_depth(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let height = get_height(nd,nodes)\n    if(height<=which){\n        return(null)\n    } else {\n        return(depth+which)\n    }\n}\n\n\nfunction get_lyr(nd,nodes) {\n    let root = get_root(nd,nodes)\n    let sdfs = get_sdfs(root,nodes)\n    let depth = get_depth(nd,nodes)\n    let lyr = sdfs.filter(nd=>(get_depth(nd,nodes) === depth))\n    return(lyr) \n}\n\nfunction get_breadth(nd,nodes) {\n    let lyr = get_lyr(nd,nodes)\n    let breadth = cmmn.dtb_kv_get_seq('_id',nd._id,lyr)\n    return(breadth)\n}\n\n\nfunction get_count(nd,nodes) {\n    let sdfs = get_sdfs(nd,nodes)\n    return(sdfs.length)\n}\n\n//ance\nfunction get_root(nd,nodes) {\n    /*\n        get_root(root,nodes)\n        get_root(child,nodes)\n    */\n    let lst_parent = nd\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        lst_parent = parent\n        parent = get_parent(parent,nodes)\n    }\n    return(lst_parent)\n}\n\nfunction get_parent(nd,nodes) {\n    let parent;\n    if(is_root(nd)) {\n        parent = null\n    } else {\n        let lstrsib = get_lstsib(nd,nodes,true)\n        parent = nodes[lstrsib._parent]\n    }\n    return(parent)\n}\n\nfunction get_ances(nd,nodes,including_self=false) {\n    let ances = []\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        ances.push(parent)\n        parent = get_parent(parent,nodes)\n    }\n    if(including_self){\n        ances.unshift(nd)\n    } else {\n        \n    }\n    return(ances)\n}\n\nfunction get_which_ance(which,nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    let lngth = ances.length\n    let cond = (which<lngth) && (which>=0)\n    if(cond) {\n        return(ances[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_ances(nd,nodes,...whiches) {\n    let ances = get_ances(nd,nodes,true)\n    let some = []\n    if(ances.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>ances.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(ances[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n\n//sdfs  depth-first  record-when-open-tag\n\nfunction get_rsib_of_fst_ance_having_rsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have rsib,return the rsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let rsib = get_rsib(parent,nodes)\n        if(rsib!==null) {\n            return(rsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\nfunction get_sdfs_next(nd,nodes) {\n    /*\n        如果有child, 返回first-child\n            如果有rsib,返回rsib\n                沿着祖先链往上,找到第一个有rsib的ance,返回这个ance的rsib\n        如果返回null,表明当前节点是sdfs数组的最后一个节点\n    */\n    let fstch = get_fstch(nd,nodes)\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = get_rsib(nd,nodes)\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(get_rsib_of_fst_ance_having_rsib(nd,nodes))\n        }\n    }\n}\n\nfunction get_drmost_des(nd,nodes){\n    /*\n       down-most  and right-most of subtree\n       including_self\n    */\n    let old_lstch = nd\n    let lstch = get_lstch(nd,nodes)\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = get_lstch(lstch,nodes)\n    }\n    return(old_lstch)\n}\n\nfunction get_sdfs_prev(nd,nodes) {\n    /*\n        如果是root ,返回null 因为root 是起始点\n        如果是叶子节点\n            如果有lsib,返回lsib\n            如果没有lsib,返回parent(没有lsib 说明这个节点是first-child)\n        如果不是叶子节点\n             如果有左邻居\n                 lsib是leaf,返回lsib\n                 lsib不是leaf,返回drmost-of-lsib \n             如果没有lsib,返回parent\n    */ \n    if(is_root(nd)) {\n        return(null)\n    }\n    let cond = is_leaf(nd)\n    if(cond) {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    } else {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            let cond = is_leaf(lsib)\n            if(cond) {\n                return(lsib)\n            } else {\n                return(get_drmost_des(lsib,nodes))\n            }\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    }\n}\n\n\nfunction get_sdfs(nd,nodes) {\n    let nd_depth = get_depth(nd,nodes)\n    let sdfs =[]\n    while(nd!==null) {\n        sdfs.push(nd)\n        nd = get_sdfs_next(nd,nodes)\n        if(nd!==null) {\n            let depth = get_depth(nd,nodes)\n            if(depth<=nd_depth) {\n                break\n            }\n        }\n    }\n    return(sdfs)\n}\n\n//edfs\n\n\nfunction get_dlmost_des(nd,nodes) {\n    /*\n        including_self\n    */\n    let old_fstch = nd\n    let fstch = get_fstch(nd,nodes)\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = get_fstch(fstch,nodes)\n    }\n    return(old_fstch)\n}\n\nfunction get_edfs_next(nd,nodes) {\n    let rsib = get_rsib(nd,nodes)\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = get_parent(nd,nodes)\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(get_dlmost_des(rsib,nodes))\n    }\n}\n\nfunction get_lsib_of_fst_ance_having_lsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let lsib = get_lsib(parent,nodes)\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\n\nfunction get_edfs_prev(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(!cond) {\n        return(get_lstch(nd,nodes))\n    } else {\n       let lsib = get_lsib(nd,nodes)\n       if(lsib === null) {\n           return(get_lsib_of_fst_ance_having_lsib(nd,nodes))\n       } else {\n           return(lsib)\n       }\n    }    \n}\n\n\nfunction get_edfs(nd,nodes) {\n    let edfs = []\n    let nxt = get_dlmost_des(nd,nodes)\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt._id === nd._id) {\n            break;\n        } else {\n            nxt = get_edfs_next(nxt,nodes)\n        }\n    }\n    return(edfs)\n}\n\n//sedfs\n\nfunction clear_$visited(nodes) {\n    cmmn.dict_foreach(nodes,(k,v)=>{nodes[k]._$visited = false})    \n}\n\nfunction get_sedfs_next(nd,nodes) {\n    let visited = nd._$visited\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes))  \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes)) \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(get_fstch(nd,nodes))    \n        }\n    }    \n}\n\n\nfunction get_sedfs_prev(visited,nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(get_lstch(nd,nodes))\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction is_sedfs_traverse_finished(start_id,nd) {\n    let cond = (nd._$visited) && (start_id === nd._id)\n    return(cond)\n}\n\nfunction get_sedfs(nd,nodes,deepcopy=false,clear=true) {\n    let sedfs = []\n    clear_$visited(nodes)   \n    let start_id = nd._id\n    while(!is_sedfs_traverse_finished(start_id,nd)) {\n        deepcopy? sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n        nd = get_sedfs_next(nd,nodes)\n    }\n    deepcopy?sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n    if(clear){\n        clear_$visited(nodes)\n    }\n    return(sedfs)\n}\n\n//\n\nfunction nd2ele(nd,nodes) {\n    let ele = {}\n    ele._depth = get_depth(nd,nodes)\n    ele._breadth = get_breadth(nd,nodes) \n    let p = get_parent(nd,nodes)\n    ele._pbreadth = (p===null)? null : get_breadth(p,nodes) \n    ele._id = nd._id\n    return(ele)\n}\n\n\n\n\nfunction _nd2unhandled_ele(nd) {\n    let o = {}\n    o.ele = {}\n    o.nd = nd\n    o.ele._id = nd._id\n    o.ele._children = []\n    return(o) \n}\n\nfunction sdfs2mat(sdfs,nodes) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0].ele._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i].ele._breadth = i\n            unhandled[i].ele._depth = m.length\n            let children = get_children(unhandled[i].nd,nodes)\n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r.ele._pbreadth = unhandled[i].ele._breadth\n                    unhandled[i].ele._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled.map(r=>r.ele)\n        m.push(lyr)\n        unhandled = next_unhandled\n    }   \n    return(m)        \n}\n\nfunction sdfs2edfs(sdfs,nodes) {\n    return(get_edfs(sdfs[0],nodes))\n}\n\nfunction sdfs2sedfs(sdfs,nodes,deepcopy=false,clear=true) {\n    return(get_sedfs(sdfs[0],nodes,deepcopy,clear))\n}\n\nfunction edfs2mat(edfs,nodes) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    let m = sdfs2mat(sdfs,nodes)\n    return(m)\n}\n\nfunction edfs2sdfs(edfs,nodes) {\n    let nd = edfs[edfs.length-1]\n    return(get_sdfs(nd,nodes))\n}\n\nfunction edfs2sedfs(edfs,nodes,deepcopy=false,clear=true) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    return(sdfs2sedfs(sdfs,nodes,deepcopy,clear)) \n}\n\nfunction sedfs2mat(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2mat(sdfs,nodes))\n}        \n\nfunction sedfs2sdfs(sedfs,nodes) {\n    let nd = sedfs[0]\n    return(get_sdfs(nd,nodes))\n}        \n\nfunction sedfs2edfs(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2edfs(sdfs,nodes))\n}\n\n\n//\n\nfunction get_deses(nd,nodes,including_self=false) {\n    let deses = get_sdfs(nd,nodes)\n    if(including_self) {\n    } else {\n        deses.splice(0,1)\n    }\n    return(deses)\n}\n\nfunction get_fst_lyr_deses(nd,nodes) {\n    return(get_children(nd,nodes))\n}\n\nfunction get_lst_lyr_deses(nd,nodes) {\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(get_depth(r,nodes)===max))\n    return(deses)\n}\n\nfunction get_which_lyr_deses(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    deses = deses.filter(r=>(get_depth(r,nodes)===(depth+which)))\n    return(deses)\n}\n\nfunction get_some_deses(nd,nodes,...whiches) {\n    let deses = whiches.map(which => get_which_deses(which,nd,nodes))\n    deses = Array.prototype.concat(...deses)\n    return(deses)\n}\n\n\n//\nfunction get_root_via_tree(tree) {\n    let k = cmmn.dict_keys(tree)[0]\n    let nd = tree[k]\n    let root = get_root(nd,tree)\n    return(root)\n}\n\nfunction tree2sdfs(tree) {\n    let root = get_root_via_tree(tree)\n    let sdfs = get_sdfs(root,tree) \n    return(sdfs)\n}\n\n\n\nmodule.exports = {\n    //\n    calc_next_id,\n    update_nodes_ids,\n    //creat\n    creat_root:creat_root,\n    creat_nd:creat_nd,\n    //is\n    is_inited:is_inited,\n    is_root:is_root,\n    is_fstch:is_fstch,\n    is_lstch:is_lstch,\n    is_leaf:is_leaf,\n    is_lonely:is_lonely,\n    is_id:is_id,\n    //insert \n    prepend_child:prepend_child,\n    append_child:append_child,\n    insert_child:insert_child,\n    add_rsib:add_rsib,\n    add_lsib:add_lsib,\n    //child\n    get_fstch:get_fstch,\n    get_rsib:get_rsib,\n    get_children:get_children,\n    get_lstch:get_lstch,\n    get_which_child:get_which_child,\n    get_some_children:get_some_children,\n    //sib\n    get_fstsib:get_fstsib,\n    get_lstsib:get_lstsib,\n    get_preceding_sibs:get_preceding_sibs,\n    get_following_sibs:get_following_sibs,\n    get_sibs:get_sibs,\n    get_which_sib:get_which_sib,\n    get_some_sibs:get_some_sibs,\n    get_sibseq:get_sibseq,\n    get_lsib:get_lsib,\n    get_rsib:get_rsib,\n    //mat\n    get_lyr:get_lyr,\n    get_breadth:get_breadth,\n    get_count:get_count,\n    get_depth:get_depth,\n    get_height:get_height,\n    get_fst_lyr_des_depth:get_fst_lyr_des_depth,\n    get_lst_lyr_des_depth:get_lst_lyr_des_depth,\n    get_which_lyr_des_depth:get_which_lyr_des_depth,\n    //ance\n    get_root:get_root,\n    get_parent:get_parent,\n    get_ances:get_ances,\n    get_which_ance:get_which_ance,\n    get_some_ances:get_some_ances,\n    //sdfs\n    get_rsib_of_fst_ance_having_rsib:get_rsib_of_fst_ance_having_rsib,\n    get_sdfs_next:get_sdfs_next,\n    get_drmost_des:get_drmost_des,\n    get_sdfs_prev:get_sdfs_prev,\n    get_sdfs:get_sdfs,\n    //edfs\n    get_lsib_of_fst_ance_having_lsib:get_lsib_of_fst_ance_having_lsib,\n    get_dlmost_des:get_dlmost_des,\n    get_edfs_next:get_edfs_next,\n    get_edfs_prev:get_edfs_prev,\n    get_edfs:get_edfs,\n    //sedfs\n    clear_$visited:clear_$visited,\n    get_sedfs_next:get_sedfs_next,\n    is_sedfs_traverse_finished:is_sedfs_traverse_finished,\n    get_sedfs_prev:get_sedfs_prev,    \n    get_sedfs:get_sedfs,\n    //des\n    get_deses:get_deses,\n    get_fst_lyr_deses:get_fst_lyr_deses,\n    get_lst_lyr_deses:get_lst_lyr_deses,\n    get_which_lyr_deses:get_which_lyr_deses,\n    get_some_deses:get_some_deses,\n    //mat\n    nd2ele:nd2ele,\n    sdfs2mat:sdfs2mat,\n    //\n    sdfs2edfs:sdfs2edfs,\n    sdfs2sedfs:sdfs2sedfs,\n    edfs2mat:edfs2mat,\n    edfs2sdfs:edfs2sdfs,\n    edfs2sedfs:edfs2sedfs,\n    sedfs2mat:sedfs2mat,\n    sedfs2sdfs:sedfs2sdfs,\n    sedfs2edfs:sedfs2edfs,\n    //\n    update_disconnected_nodes,\n    update_orig_nodes,\n    leafize,\n    rootize,\n    disconnect,\n    rm_fstch,\n    rm_lstch,\n    rm_which,\n    rm_some,\n    rm_all,\n    //\n    update_treeid,\n    update_one_nodeid,\n    update_nodes_ids,\n    prepend_child_tree,\n    append_child_tree,\n    add_rsib_tree,\n    add_lsib_tree,\n    insert_child_tree,\n    //\n    get_root_via_tree,\n    tree2sdfs,\n}\n\n\n","const ndcls = require('./ndcls.js')\nconst ndfunc = require('./ndfunc.js')\nconst ndfuncterm = require('./ndfuncterm.js')\nconst ndutil = require('./util.js')\n\nmodule.exports = {\n    ndfunc:ndfunc,\n    ndfuncterm:ndfuncterm,\n    ndcls:ndcls,\n    ndutil:ndutil,\n}\n","const fs = require(\"fs\")\n\nfunction rjson(fn) {\n    let buf = fs.readFileSync(fn)\n    let s = buf.toString()\n    let d = JSON.parse(s)\n    return(d)\n}\n\nfunction wjson(fn,js) {\n    let s =JSON.stringify(js)\n    fs.writeFileSync(fn,s)\n}\n\n\n\nmodule.exports = {\n    rjson,\n    wjson,\n}\n","const jsfunc = require('./jsfunc')\n\nmodule.exports = {\n    jsfunc\n}\n","const ndcls = require('ndtreejs').ndcls\nconst {Tree} = require('ndtreejs').ndcls\nconst util = require('util')\n\n\nfunction get_jobj_type(o) {\n    if(o instanceof Array) {\n        return('arr')\n    } else if(util.isPrimitive(o)) {\n       if(o === null) {\n           return(null)\n       } else {\n           return(typeof(o))\n       }\n    } else {\n        return('dict')\n    }\n}\n\n\nfunction is_raw_type_via_str(s){\n    if((s === 'arr') || (s === 'dict')) {\n        return(false)\n    } else {\n        return(true)\n    }\n}\n\n\nfunction get_jobj_child_klvl(o) {\n    if(o instanceof Array) {\n        return({kl:o.map((r,i)=>i),vl:o})\n    } else if(util.isPrimitive(o)) {\n        return({kl:[]},{vl:[]})\n    } else {\n        let entries = Object.entries(o)\n        return({kl:entries.map(r=>r[0]),vl:entries.map(r=>r[1])})\n    }    \n}\n\n\nfunction jobj2tree(o) {\n    //\n    let rt = new Tree()\n    rt.type = get_jobj_type(o)\n    rt.key = null\n    rt.val = o\n    //\n    unhandled = [\n        {\n           obj:o,\n           nd:rt\n        }\n    ]\n    while(unhandled.length >0 ) {\n        next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            let o = unhandled[i].obj\n            let nd = unhandled[i].nd\n            let {kl,vl} = get_jobj_child_klvl(o)\n            for(let i=0;i<vl.length;i++) {\n                let ndch = nd.$append_child()\n                ndch.type = get_jobj_type(vl[i])\n                ndch.key = kl[i]\n                ndch.val = vl[i] \n                let child = {\n                    obj:vl[i],\n                    nd:ndch\n                }\n                next_unhandled.push(child)\n            }            \n        }\n        unhandled = next_unhandled \n    }\n    return(rt)\n}\n\n\nfunction get_bracket_pl(nd) {\n    let ances = nd.$ances(including_self=true)\n    let pl = ances.map(r=>r.key).reverse().slice(1)\n    pl = pl.map(p=>'['+JSON.stringify(p)+']')\n    return(pl.join(''))    \n}\n\nfunction get_pl(nd) {\n    let ances = nd.$ances(including_self=true)\n    let pl = ances.map(r=>r.key).reverse().slice(1)\n    return(pl)\n}\n\n\n\nfunction get_flat_key(nd) {\n    let pl = get_pl(nd) \n    return(JSON.stringify(pl))\n}\n\n\nfunction flatten_to_entries(o) {\n    let tree = jobj2tree(o)\n    let sdfs = tree.$sdfs()\n    let pls = sdfs.map(r=>get_flat_key(r))\n    let vals = sdfs.map(\n        r=> {\n           if(r.type === 'dict') { return({})}\n           else if(r.type === 'arr') { return([])}\n           else {return(r.val)} \n        }\n    )\n    let entries = pls.map((p,i)=>[p,vals[i]])\n    return(entries)\n}\n\n//\nfunction is_valid_dot_key(s) {\n    s = s.toString()\n    let cond = !(s.indexOf('.')>=0)\n    return(cond)\n}\n\nfunction is_valid_pl_for_dot(pl){\n    let cond = pl.every(r=>is_valid_dot_key(r))\n    return(cond)\n}\n\n\nfunction entries_to_dot_entries(entries) {\n    let arr =[]\n    for(let i=0;i<entries.length;i++) {\n        let entry = entries[i]\n        let pl = JSON.parse(entry[0])\n        let cond = is_valid_pl_for_dot(pl)\n        if(cond) {\n            arr.push([pl.join('.'),entry[1]])\n        } else {\n            throw(entry[0]+' have dot in it !! ')\n        }\n    }\n    return(arr)\n}\n\nfunction is_valid_nondot_key(s) {\n    s = s.toString()\n    let cond = !(s.indexOf('[')>=0) && !(s.indexOf(']')>=0) \n    return(cond)\n}\n\nfunction is_valid_pl_for_nondot(pl){\n    let cond = pl.every(r=>is_valid_dot_key(r))\n    return(cond)\n}\n\n\n\nfunction dot_entries_to_entries(entries) {\n    let arr =[]\n    for(let i=0;i<entries.length;i++) {\n        let entry = entries[i]\n        let pl = JSON.parse(entry[0])\n        pl = pl.split('.')\n        let cond = is_valid_pl_for_nondot(pl)\n        if(cond) {\n            arr.push([pl.join('.'),entry[1]])\n        } else {\n            throw(entry[0]+' have dot in it !! ')\n        }\n    }\n    return(arr)\n}\n\n\n\nfunction flatten_to_dot_entries(o) {\n    let entries = flatten_to_entries(o) \n    return(entries_to_dot_entries(entries))\n}\n\n//\n\n\n\n\nfunction flatten_to_dict(jobj) {\n    let entries = flatten_to_entries(jobj)\n    let d = {}\n    for(let i=0;i<entries.length;i++) {\n        let k = entries[i][0]\n        let v = entries[i][1]\n        d[k] = v\n    }\n    return(d)\n}\n\nfunction flatten_to_dot_dict(jobj) {\n    let entries = flatten_to_dot_entries(jobj)\n    let d = {}\n    for(let i=0;i<entries.length;i++) {\n        let k = entries[i][0]\n        let v = entries[i][1]\n        d[k] = v\n    }\n    return(d)\n}\n\n\n\n\nfunction set_dict_via_pl(pl,v,d) {\n    for(let i=0;i<pl.length-1;i++) {\n        d = d[pl[i]]\n    }\n    d[pl[pl.length-1]] = v\n    return(d)\n}\n\nfunction set_dflt_dict_via_pl(dict,pl,v) {\n    let d = dict\n    for(let i=0;i<pl.length-1;i++) {\n        let k = pl[i]\n        let cond = (d[k] !== undefined)\n        if(cond) {\n            d = d[k]\n        } else {\n            d[k] = {}\n            d= d[k]\n        }\n    }\n    d[pl[pl.length-1]] = v\n    return(dict)\n}\n\n\n\n\n\nfunction deflatten_from_entries(entries,deepcopy=true) {\n   entries = deepcopy?JSON.parse(JSON.stringify(entries)) : entries\n   let d = entries[0][1]\n   for(let i=1;i<entries.length;i++) {\n       let pl = JSON.parse(entries[i][0])\n       let v = entries[i][1]\n       set_dict_via_pl(pl,v,d) \n   }\n   return(d)     \n}\n\n\nfunction deflatten_from_dot_entries(entries,deepcopy=true) {\n   entries = deepcopy?JSON.parse(JSON.stringify(entries)) : entries\n   let d = entries[0][1]\n   for(let i=1;i<entries.length;i++) {\n       let pl = entries[i][0].split('.')\n       let v = entries[i][1]\n       set_dict_via_pl(pl,v,d)\n   }\n   return(d)\n}\n\n\n\n\nfunction _reorder_entries_by_pl_length(entries) {\n   entries = entries.sort(\n       (a,b)=>{\n           return(a[0].length - b[0].length)\n       }\n   )\n   return(entries)     \n}\n\n\nfunction deflatten_from_dict(flat_dict,reorder=false,deepcopy=true) {\n   flat_dict = deepcopy?JSON.parse(JSON.stringify(flat_dict)) : flat_dict\n   let entries = [] \n   for(let k in flat_dict) {\n       let pl = JSON.parse(k)\n       let v = flat_dict[k]\n       entries.push([pl,v])\n   }\n   if(reorder) {\n       entries = _reorder_entries_by_pl_length(entries)\n   } else {\n   }\n   let jobj = entries[0][1]\n   for(let i=1;i<entries.length;i++) {\n       let pl = entries[i][0]\n       let v = entries[i][1]\n       set_dict_via_pl(pl,v,jobj)\n   }\n   return(jobj)    \n}\n\nfunction deflatten_from_dot_dict(flat_dict,reorder=false,deepcopy=true) {\n   flat_dict = deepcopy?JSON.parse(JSON.stringify(flat_dict)) : flat_dict\n   let entries = []\n   for(let k in flat_dict) {\n       let pl = k.split('.')\n       let v = flat_dict[k]\n       entries.push([pl,v])\n   }\n   if(reorder) {\n       entries = _reorder_entries_by_pl_length(entries)\n   } else {\n   }\n   let jobj = entries[0][1]\n   for(let i=1;i<entries.length;i++) {\n       let pl = entries[i][0]\n       let v = entries[i][1]\n       set_dict_via_pl(pl,v,jobj)\n   }\n   return(jobj)\n}\n\n\n\nfunction get_container_or_val_via_nd(nd) {\n    if(is_raw_type_via_str(nd.type)) {\n        return(nd.val)\n    } else if(nd.type === 'dict') {\n        return({})\n    } else {\n        //array\n        return([])\n    }\n}\n\nfunction tree2jobj(tree) {\n    let sdfs = tree.$sdfs()\n    let entries = sdfs.map(nd=>[get_pl(nd),get_container_or_val_via_nd(nd)])\n    let jobj = entries[0][1]\n    for(let i=1;i<entries.length;i++) {\n        let pl = entries[i][0]\n        let v = entries[i][1]\n        set_dict_via_pl(pl,v,jobj)\n    }\n    return(jobj)\n}\n\n\n//\nfunction get_val_via_pl(pl,d) {\n    for(let i=0;i<pl.length;i++) {\n        d = d[pl[i]]\n    }\n    return(d)\n}\n\nfunction eq(j0,j1) {\n    try {\n        assert.deepStrictEqual(j0,j1)\n    } catch(e) {\n        return(false)\n    }\n    return(true)\n}\n\nfunction struct_eq(j0,j1) {\n    let tree0 = jobj2tree(j0)\n    let tree1 = jobj2tree(j1)\n    return(ndcls.struct_eq(tree0,tree1))\n}\n\n//\nfunction _get_kmat_val(o) {\n    if(o instanceof Array) {\n        return(o)\n    } else if(util.isPrimitive(o)) {\n       if(o === null) {\n           return(null)\n       } else {\n           return(typeof(o))\n       }\n    } else {\n        return(o)\n    }\n}\n\nfunction tree2kjobj(tree) {\n    let sdfs = tree.$sdfs()\n    let entries = sdfs.map(nd=>[get_pl(nd),get_container_or_val_via_nd(nd)])\n    entries = entries.map(entry=>[entry[0],_get_kmat_val(entry[1])])\n    let kjobj = entries[0][1]\n    for(let i=1;i<entries.length;i++) {\n        let pl = entries[i][0]\n        let v = entries[i][1]\n        set_dict_via_pl(pl,v,kjobj)\n    }\n    return(kjobj)\n}\n\nfunction nd2vjobj(nd){\n    let cond = is_raw_type_via_str(nd.type)\n    if(cond) {\n        return(nd.val)\n    } else {\n        return([])\n    }\n}\n\nfunction get_vmat_nonleaf_children(ele_children,vjobj_children) {\n    let vl = vjobj_children.filter(ele=>(ele instanceof Array))\n    let el = ele_children.filter(ele=>ele._children.length>0)\n    let children = vl.map((r,i)=>({vjobj:r,ele:el[i]}))\n    return(children)\n}\n\n\nfunction tree2vjobj(tree) {\n    let mat = tree.$sdfs2mat()\n    let rele = mat[0][0]\n    let unhandled = [{vjobj:[],ele:rele}]\n    let runhandled = unhandled\n    while(unhandled.length>0) {\n        next_unhandled = []\n        for(let i=0;i<unhandled.length;i++){\n            let ele = unhandled[i].ele\n            let vjobj = unhandled[i].vjobj\n            let chlocs = ele._children\n            let ele_children = chlocs.map(loc=>mat[loc[0]][loc[1]])\n            let nd_children = ele_children.map(ele=>ele._nd)\n            let vjobj_children = nd_children.map(nd=>nd2vjobj(nd))\n            vjobj_children.forEach(ch=>vjobj.push(ch))\n            let children = get_vmat_nonleaf_children(ele_children,vjobj_children)\n            next_unhandled = next_unhandled.concat(children)\n        }\n        unhandled = next_unhandled\n    }\n    return(runhandled[0].vjobj)\n}\n\n//\nfunction unzip(j) {\n    let tree = jobj2tree(j)\n    let kjobj = tree2kjobj(tree)\n    let vjobj = tree2vjobj(tree)\n    return({\n        schema:kjobj,\n        vmat:vjobj\n    })\n}\n\n\n\nfunction zip(d) {\n    let kjobj = d.schema\n    let vjobj = d.vmat\n    let k_entries = flatten_to_entries(kjobj)\n    let v_entries = flatten_to_entries(vjobj)\n    let entries = k_entries.map(\n        (k,i)=> {\n            if(typeof(k[1])==='string') {\n                return([k[0],v_entries[i][1]])\n            } else {\n                return(k)\n            }\n        }\n    )\n    return(deflatten_from_entries(entries))\n}\n\n\nmodule.exports = {\n    set_dict_via_pl,      //pl,v,d\n    set_dflt_dict_via_pl, //d,pl,v\n    get_val_via_pl,       //pl,d\n    ////\n    get_jobj_type,\n    is_raw_type_via_str,\n    get_jobj_child_klvl,\n    jobj2tree,\n    get_bracket_pl,        //nd\n    get_pl,                //nd\n    get_flat_key,          //nd\n    get_container_or_val_via_nd, //nd\n    ////\n    is_valid_dot_key,\n    is_valid_nondot_key,\n    is_valid_pl_for_dot,\n    is_valid_pl_for_nondot,\n    entries_to_dot_entries,\n    dot_entries_to_entries,\n    ////\n    flatten_to_dict,\n    flatten_to_dot_dict,\n    flatten_to_entries,\n    flatten_to_dot_entries,\n    deflatten_from_entries,\n    deflatten_from_dot_entries,\n    deflatten_from_dict,\n    deflatten_from_dot_dict,\n    //\n    eq,\n    struct_eq,\n    tree2jobj,\n    tree2kjobj,\n    tree2vjobj,\n    //\n    unzip,\n    zip,\n}\n","const ndutil = require('./util.js')\nconst cmmn = require('./cmmn.js')\nconst ndfunc = require('./ndfunc.js')\nconst EventTarget = require('./event-target.js').EventTarget\nconst STRUCT_KEYS = ['_fstch','_lsib','_rsib','_parent','_tree']\n\n\nfunction _is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction _is_root(nd) {\n    //根节点的_tree 指向自己\n    let cond = (nd._tree === nd)\n    return(cond)\n}\n\nfunction _is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction _is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\n\nfunction _is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\n\nfunction _is_lonely(nd) {\n    let sibs = nd.$sibs(true)\n    return(sibs.length === 1)\n}\n\n\n/* child query*/\n\n//_fstch is always directly\n\nfunction _lstch(nd) {\n    let child = nd._fstch\n    let oldch = child\n    while(child!==null) {\n        oldch = child\n        child = child._rsib\n    }\n    return(oldch)\n}\n\nfunction _which_child(index,nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(c === index) {\n            return(child)\n        } else {\n            if(child === null) {\n                return(child)\n            } else {\n            }\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\nfunction _some_children(nd,...whiches) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(whiches.includes(c)) {\n            children.push(child)\n        } else {\n            if(child === null) {\n                return(children)\n            } else {\n            }\n        }\n        child = child._rsib \n        c = c + 1\n    }\n}\n\nfunction _children(nd) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(children)\n        } else {\n            children.push(child)\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\nfunction _children_count(nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(c)\n        } else {\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\n/*sib*/\n\n//_rsib is always directly \n\nfunction _lstsib(nd,including_self=false) {\n    let rsib = nd._rsib\n    let oldrsib = nd\n    while(rsib !== null) {\n        oldrsib = rsib\n        rsib = rsib._rsib \n    }  \n    if(including_self){\n        return(oldrsib)\n    } else {\n        if(oldrsib !== nd) {\n            return(oldrsib)\n        } else {\n            return(null)\n        }\n    }    \n}\n\n\n\nfunction _fstsib(nd,including_self=false) {\n    let p = _parent(nd)\n    if(p === null) {\n        return((including_self)?nd:null)\n    } else {\n        let fstsib = p._fstch\n        if(including_self) {\n            return(fstsib)        \n        } else {\n            if(fstsib !== nd) {\n                return(fstsib)\n            } else {\n                return(null)\n            }\n        }\n    }\n}\n\n\nfunction _lsib(nd) {\n    let fstsib = _fstsib(nd,false)\n    if(fstsib === null) {\n        return(null)\n    } else {\n        let sib = fstsib\n        while(true) {\n            if(sib._rsib === nd) {\n                return(sib)\n            } else {\n            }\n            sib = sib._rsib\n        }\n    }\n}\n\n\nfunction _psibs(nd) {\n    let psibs = []\n    let fstsib = _fstsib(nd,true)\n    let sib = fstsib\n    while(sib !== null) {\n        if(sib === nd) {\n            return(psibs)           \n        } else {\n            psibs.push(sib)\n        }\n        sib = sib._rsib\n    }\n}\n\n\nfunction _fsibs(nd) {\n    let fsibs = []\n    let rsib = nd._rsib\n    while(rsib !== null) {\n        fsibs.push(rsib)\n        rsib = rsib._rsib\n    }\n    return(fsibs)\n}\n\nfunction _sibs(nd,including_self=false) {\n    let psibs = _psibs(nd)\n    let fsibs = _fsibs(nd)\n    let me = [nd]\n    if(including_self) {\n        sibs = psibs.concat(me,fsibs)\n    } else {\n        sibs = psibs.concat(fsibs)\n    }\n    return(sibs)\n}\n\n\nfunction _which_sib(index,nd) {\n    let sib = _fstsib(nd,true)\n    let c = 0\n    while(true) {\n        if(sib === null) {\n            return(null)\n        } else {\n            if(c==index) {\n                return(sib)\n            }\n        }\n        sib = sib._rsib\n        c = c + 1\n    }    \n}\n\nfunction _some_sibs(nd,...indexes) {\n    let sibs = _sibs(nd,true) \n    let some = sibs.filter(\n        (r,i) => indexes.includes(i) \n    )\n    return(some)   \n}\n\n\nfunction _sibseq(nd) {\n    let psibs = _psibs(nd)\n    return(psibs.length)\n}\n\n\nfunction _sibs_count(nd,including_self=false) {\n    let sibs = nd.$sibs(including_self)\n    return(sibs.length)\n}\n\n\n\n\n/*ance*/\n\nfunction _parent(nd) {\n    let lstsib = _lstsib(nd,true)\n    return(lstsib._parent)\n}\n\nfunction _root(nd) {\n    let ance = nd\n    let old = nd\n    while(ance !== null) {\n        old = ance\n        ance = ance.$parent()\n    }\n    return(old)    \n}\n\nfunction _which_ance(index,nd) {\n    let c = 0\n    let ance = nd\n    while(ance !== null) {\n        if(c === index) {\n            return(ance)\n        } else {\n        }\n        ance = ance.$parent()\n        c = c+1\n    }\n    return(null)\n}\n\nfunction _ances(nd,including_self=false) {\n    let ances = []\n    let ance = nd\n    if(including_self) {\n        ances.push(ance)\n    } else {\n    } \n    ance = ance.$parent()\n    while(ance !== null)  {\n        ances.push(ance)\n        ance = ance.$parent()\n    }\n    return(ances) \n}\n\nfunction _some_ances(nd,...indexes) {\n    let ances = _ances(nd,true)\n    let some = ances.filter(\n        (r,i) => indexes.includes(i)\n    )\n    return(some)      \n}\n\nfunction _ances_count(nd,including_self=false) {\n    let ances = _ances(nd,including_self)\n    return(ances.length)\n}\n\n\n/**/\nfunction _luncle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$lsib())\n    } \n}\n\nfunction _runcle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$rsib())\n    } \n}\n\nfunction _lcin(nd) {\n    let luncle = nd.$luncle()\n    if(!nd.$is_fstch()) {\n        return(null) \n    } else if(luncle === null) {\n        return(null)\n    } else {\n        return(luncle.$lstch())\n    }\n}\n\nfunction _rcin(nd) {\n    let runcle = nd.$runcle()\n    if(!nd.$is_lstch()) {\n        return(null)\n    } else if(runcle === null) {\n        return(null)\n    } else {\n        return(runcle.$fstch())\n    }\n}\n\n/**/\n\nfunction _lyr(nd) {\n    let rt = nd.$root() \n    let sdfs = rt.$sdfs() \n    let depth = nd.$depth()\n    let lyr = sdfs.filter(nd=>(nd.$depth() === depth))\n    return(lyr)    \n}\n\n/**/\n\n\nfunction _breadth(nd) {\n    let lyr = nd.$lyr()\n    let breadth = lyr.indexOf(nd)\n    return(breadth)   \n}\n\nfunction _width(nd) {\n    //只计算叶子个数的宽度\n    let sdfs = nd.$sdfs()\n    sdfs = sdfs.filter(nd=>nd.$is_leaf())\n    return(sdfs.length)\n}\n\nfunction _offset(nd) {\n    //edfs filter-by-isleaf ,and then index \n    //如果是非叶子,dlmost的offset\n    let rt = nd.$root()\n    let edfs = rt.$edfs()\n    let index;\n    if(nd.$is_leaf()) {\n        index = edfs.indexOf(nd) \n    } else {\n        let dlmost = nd.$dlmost_des()\n        index = edfs.indexOf(dlmost)\n    }\n    edfs = edfs.slice(0,index+1)\n    offset = edfs.filter(nd=>nd.$is_leaf()).length - 1\n    return(offset) \n}\n\n/**/\n\n\nfunction _deses(nd,including_self=false) {\n    let drmost = _drmost_des(nd) \n    let sdfs = _sdfs(nd)\n    let index = sdfs.indexOf(drmost) \n    if(including_self) {\n        return(sdfs.slice(0,index+1)) \n    } else {\n        return(sdfs.slice(1,index+1)) \n    } \n}\n\nfunction _lst_lyr_deses(nd) {\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(r.$depth()===max))\n    return(deses) \n}\n\nfunction _which_lyr_deses(index,nd) {\n    let depth = nd.$depth()\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(r.$depth()===(depth+index)))\n    return(deses)\n}\n\nfunction _some_lyrs_deses(nd,...rel_depths) {\n    let depth = nd.$depth()\n    let abs_depths = rel_depths.map(r=>r+depth)\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(abs_depths.includes(r.$depth())))\n    return(deses)\n}\n\n\n/*add node */\n\nfunction _prepend_child(nd,child) {\n    //只有根节点才可以被链接到另一颗树上\n    let cond = nd.$is_leaf()\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd\n    } else {\n        //变更old_fstch\n        let old_fstch = nd._fstch\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch\n        //添加child \n    }   \n    nd._fstch = child\n    return(child)\n}   \n\n\nfunction _append_child(nd,child) {\n    let cond = nd.$is_leaf() \n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child\n        child._lsib = null\n    } else {\n        //变更old_lstch\n        let old_lstch = nd.$lstch() \n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child\n    }\n    child._parent = nd\n    return(child)\n}\n\n\n\nfunction _add_rsib(nd,rsib) {\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_lstch()\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n    }\n    nd._rsib = rsib\n    return(rsib)\n}\n\n\nfunction _add_lsib(nd,lsib) {\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_fstch()\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = nd.$parent() \n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib\n    } else {\n        let old_lsib = nd.$lsib()\n        old_lsib._rsib = lsib\n    }\n    lsib._rsib = nd\n    return(lsib)\n}\n\n\nfunction _insert_child(which,nd,child) {\n    let children = _children(nd)\n    let lngth = children.length\n    if(lngth ===0) {\n        child = _prepend_child(nd,child)\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n        } else {\n            if(which === 0) {\n                child = _prepend_child(nd,child)\n            } else if(which === lngth) {\n                child = _append_child(nd,child)\n            } else {\n                let lnd = children[which-1]\n                child = _add_rsib(lnd,child)\n            }   \n        }   \n    }\n    return(child)   \n}   \n\n\n/*sdfs*/\n\nfunction _rsib_of_fst_ance_having_rsib(nd) {\n    let p = nd.$parent()\n    while(p!==null) {\n        let rsib = p.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            p = p.$parent()  \n        }\n    }\n    return(null)\n}\n\nfunction _sdfs_next(nd) {\n    let fstch = nd.$fstch()\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = nd.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(nd.$rsib_of_fst_ance_having_rsib())\n        }\n    }    \n}\n\nfunction _drmost_des(nd) {\n    let old_lstch = nd\n    let lstch = nd.$lstch()\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = lstch.$lstch()\n    }\n    return(old_lstch)\n}\n\nfunction _sdfs_prev(nd) {\n    if(nd.$is_root()) {\n        return(null)\n    }\n    let cond = nd.$is_leaf()\n    if(cond) {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    } else {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            let cond = lsib.$is_leaf()\n            if(cond) {\n                return(lsib)\n            } else {\n                return(lsib.$drmost_des())\n            }\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    }\n}\n\nfunction _sdfs(nd) {\n    let depth = nd.$depth()\n    if(nd === null) {\n        return([])\n    } else {\n        let sdfs =[nd]\n        nd = nd.$sdfs_next()\n        while(nd!==null && (nd.$depth() >depth) ) {\n            sdfs.push(nd)\n            nd = nd.$sdfs_next()\n        }\n        return(sdfs)  \n    }  \n}\n\n/**/\n\nfunction _dlmost_des(nd) {\n    let old_fstch = nd\n    let fstch = nd.$fstch()\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = fstch.$fstch()\n    }\n    return(old_fstch)\n}\n\nfunction _edfs_next(nd) {\n    let rsib = nd.$rsib()\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = nd.$parent()\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(rsib.$dlmost_des())\n    }\n}\n\nfunction _lsib_of_fst_ance_having_lsib(nd) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = nd.$parent() \n    while(parent!==null) {\n        let lsib = parent.$lsib()\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = parent.$parent()\n        }\n    }\n    return(null)\n}\n\nfunction _edfs_prev(nd) {\n    let cond = nd.$is_leaf() \n    if(!cond) {\n        return(nd.$lstch())\n    } else {\n       let lsib = nd.$lsib()\n       if(lsib === null) {\n           return(nd.$lsib_of_fst_ance_having_lsib())\n       } else {\n           return(lsib)\n       }\n    }   \n}\n\n\n\nfunction _edfs(nd) {\n    let edfs = []\n    let nxt = nd.$dlmost_des()\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt === nd) {\n            break;\n        } else {\n            nxt = nxt.$edfs_next()\n        }\n    }\n    return(edfs)\n\n}\n\n\n/**/\n\nfunction _sedfs_next(nd) {\n    let visited = nd.$visited\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd.$fstch())\n        }\n    }   \n}\n\nfunction _sedfs_prev(visited,nd) {\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(nd.$lstch())\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction _clear_visited(nd) {\n    let sdfs = nd.$sdfs()\n    sdfs.forEach(\n        nd=>{delete nd.$visited}\n    )\n}\n\nfunction _is_sedfs_traverse_finished(startnd,nd) {\n    let cond = (nd.$visited) && (startnd === nd)\n    return(cond)\n}\n\nfunction _sedfs(nd) {\n    _clear_visited(nd);\n    let sedfs = []\n    let st = new Set()\n    let startnd = nd\n    while(!_is_sedfs_traverse_finished(startnd,nd)) {\n        if(st.has(nd)) {\n            nd.$close_at = sedfs.length\n        } else {\n            nd.$open_at = sedfs.length\n            st.add(nd) \n        }\n        sedfs.push(nd)\n        nd = _sedfs_next(nd)\n    }\n    startnd.$close_at = sedfs.length\n    sedfs.push(startnd)\n    sedfs.forEach(nd=>{delete nd.$visited})     \n    return(sedfs)    \n}\n\n\n/**/\nfunction _leafize(nd) {\n    nd._fstch = null\n    return(nd)\n}\n\nfunction _rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd)\n}\n\nfunction _update_disconnected_nodes(nd) {\n    let nsdfs = nd.$sdfs() \n    nsdfs.forEach(\n       nd=> {\n           nd._tree = nsdfs[0]\n       }\n    )\n    return(nsdfs)\n}\n\n\n\nfunction _disconn(nd) {\n    let cond = nd.$is_root() \n    if(cond) {\n        //do nothing\n        return(nd)\n    } else if(nd.$is_lonely()) {\n        //\n        let parent = nd.$parent() \n        _leafize(parent); \n        let nsdfs = _update_disconnected_nodes(nd);\n        _rootize(nd);\n        return(nd)\n    } else {\n        if(nd.$is_fstch()) {\n            //节点变味新树的根节点\n            let rsib = nd.$rsib()\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            // parent 的fstch 要指向rsib\n            let parent = nd.$parent() \n            parent._fstch = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else if(nd.$is_lstch()) {    \n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else {\n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        }\n    }  \n}\n\n\n\n/**/\nfunction _add_extra(d,nd) {\n    for(let k in d) {\n        nd[k] = d[k]\n    }\n}\n/**/\n\nfunction _nd2unhandled_ele(nd) {\n    let ele = {}\n    ele._nd = nd\n    ele._children = []\n    return(ele)\n}\n\n\nfunction _sdfs2mat(sdfs) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0]._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i]._breadth = i\n            unhandled[i]._depth = m.length\n            let children = unhandled[i]._nd.$children() \n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r._pbreadth = unhandled[i]._breadth\n                    unhandled[i]._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled\n        m.push(lyr)\n        unhandled = next_unhandled\n    }  \n    return(m)\n}\n\n\n/**/\n\nclass _Node extends EventTarget {\n    constructor() {\n        super();\n        this._fstch = null\n        this._lsib = undefined\n        this._rsib = undefined\n        this._parent = undefined\n        this._tree = undefined\n        this.$guid = cmmn.gen_guid()\n    }\n    $is_inited() {\n        return(_is_inited(this))\n    }\n    $is_root() {\n        return(_is_root(this))\n    }\n    $is_fstch() {\n        return(_is_fstch(this))\n    }\n    $is_lstch() {\n        return(_is_lstch(this))\n    }   \n    $is_leaf() {\n        return(_is_leaf(this))\n    }\n    $is_lonely() {\n        return(_is_lonely(this))\n    }\n    //child\n    $fstch() {\n        return(this._fstch)\n    }\n    $lstch() {\n        return(_lstch(this))\n    }\n    $which_child(index) {\n        return(_which_child(index,this))\n    }\n    $some_children(...indexes) {\n        return(_some_children(this,...indexes))\n    }\n    $children() {\n        return(_children(this))\n    }\n    $children_count() {\n        return(_children_count(this))\n    }\n    //\n    $rsib() {\n        return(this._rsib)\n    }\n    $lsib() {\n        return(_lsib(this))\n    }\n    $fstsib(including_self=false) {\n        return(_fstsib(this,including_self))\n    } \n    $lstsib(including_self=false) {\n        return(_lstsib(this,including_self))\n    }\n    $psibs() {\n        return(_psibs(this))\n    }\n    $fsibs() {\n        return(_fsibs(this))\n    }\n    $which_sib(index) {\n        return(_which_sib(index,this))\n    }\n    $some_sibs(...indexes) {\n        return(_some_sibs(this,...indexes))\n    }\n    $sibseq() {\n        return(_sibseq(this))\n    }\n    $sibs(including_self=false) {\n        return(_sibs(this,including_self))\n    }\n    $sibs_count(including_self=false) {\n        return(_sibs_count(this,including_self))\n    } \n    //\n    $parent() {\n        return(_parent(this))\n    } \n    $root() {\n        return(_root(this))\n    } \n    $ances(including_self=false) {\n        return(_ances(this,including_self))\n    }\n    $which_ance(index) {\n        return(_which_ance(index,this))\n    }\n    $some_ances(...indexes) {\n        return(_some_ances(this,...indexes))\n    }\n    $ances_count(including_self=false) {\n        return(_ances_count(this,including_self))\n    }\n    //\n    $prepend_child(child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_prepend_child(this,child))       \n    }\n    $insert_child(which,child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_insert_child(which,this,child))\n    }\n    $append_child(child)  {\n        child = (child===undefined)?(new _Node()):child\n        return(_append_child(this,child))\n    }\n    $clone() {\n        if(_is_root(this)) {\n            let ndict = _dump(this)\n            return(_load(ndict))\n        } else {\n            let index = _sibseq(this)\n            let parent = _parent(this)\n            _disconn(this)\n            let ndict = _dump(this)\n            let dup = _load(ndict)\n            _insert_child(index,parent,this)\n            return(dup)   \n        } \n    }\n    $append_children(n,child) {\n        let children = []\n        for(let i=0;i<n;i++) {\n            let ch = (child===undefined)?(new _Node()):child.$clone()\n            ch = _append_child(this,ch)\n            children.push(ch)\n        }\n        return(children)\n    }\n    //\n    $add_rsib(rsib) {\n        rsib = (rsib===undefined)?(new _Node()):rsib\n        return(_add_rsib(this,rsib))\n    }\n    $add_lsib(lsib)  {\n        lsib = (lsib===undefined)?(new _Node()):lsib\n        return(_add_lsib(this,lsib))\n    }  \n    //\n    $rsib_of_fst_ance_having_rsib() {\n        return(_rsib_of_fst_ance_having_rsib(this))\n    } \n    $sdfs_next() {\n        return(_sdfs_next(this)) \n    }\n    $drmost_des() {\n        return(_drmost_des(this))\n    }\n    $sdfs_prev() {\n        return(_sdfs_prev(this))\n    }\n    $sdfs() {\n        return(_sdfs(this))\n    }\n    //\n    $dlmost_des() {\n        return(_dlmost_des(this))\n    }\n    $edfs_next() {\n        return(_edfs_next(this))\n    }\n    $lsib_of_fst_ance_having_lsib() {\n        return(_lsib_of_fst_ance_having_lsib(this))\n    }\n    $edfs_prev() {\n        return(_edfs_prev(this))\n    }\n    $edfs() {\n        return(_edfs(this))\n    }\n    $offset() {\n        return(_offset(this))\n    }\n    //\n    $sedfs_next() {\n        return(_sedfs_next(this))\n    }\n    $sedfs_prev(visited) {\n        return(_sedfs_prev(this))\n    }\n    $sedfs(){\n        return(_sedfs(this))\n    }\n    //\n    $deses(including_self=false) {\n        return(_deses(this,including_self))\n    }\n    $lst_lyr_deses() {\n        return(_lst_lyr_deses(this))\n    }\n    $which_lyr_deses(index) {\n        return(_which_lyr_deses(index,this))\n    }\n    $some_lyrs_deses(...rel_depths) {\n        return(_some_lyrs_deses(this,...rel_depths))\n    }\n    //\n    $count(including_self=true) {\n        return(_deses(this,including_self).length)\n    }\n    $depth(including_self=false) {\n        return(_ances(this,including_self).length)\n    }\n    $height() {\n        let depth = this.$depth()\n        let sdfs = this.$sdfs()\n        let des_depths = sdfs.map(nd=>nd.$depth())\n        let max = Math.max(...des_depths)\n        return(max-depth+1)        \n    }\n    $breadth() {\n        return(_breadth(this))\n    }\n    $width() {\n        return(_width(this))\n    }\n    //\n    $lyr() {\n        return(_lyr(this))\n    }\n    //\n    $lcin() {\n        return(_lcin(this))\n    }\n    $rcin() {\n        return(_rcin(this))\n    }\n    $luncle() {\n        return(_luncle(this))\n    }\n    $runcle() {\n        return(_runcle(this))\n    }\n    //\n    $sdfs_repr() {\n        let rt = this.$root()\n        let tree = _sdfs(rt)\n        let sdfs = _sdfs(this)\n        let depths = sdfs.map(nd=>nd.$depth()) \n        let indents = depths.map(depth=>'    '.repeat(depth))\n        indents.forEach((indent,i)=>{console.log(indent+'['+tree.indexOf(sdfs[i])+']'+' : '+sdfs[i].$guid)})    \n    }\n    $sedfs_repr() {\n        let rt = this.$root()\n        _set_id(rt)       \n        let sedfs = _sedfs(this)\n        sedfs.forEach(\n            (nd,i)=> {\n                let depth = nd.$depth()\n                let indent = '    '.repeat(depth)\n                if(i === nd.$open_at)  {\n                    console.log(indent+'<'+nd._id+' : ' + nd.$guid +'>')\n                }\n                if(i === nd.$close_at)  {\n                    console.log(indent+'</'+nd._id+' : ' +nd.$guid +'>')\n                }                               \n            }\n        )\n    }\n    //\n    $disconn() {\n        return(_disconn(this))\n    }\n    $rm_fstch() {\n        let fstch = this._fstch\n        return(_disconn(fstch))\n    }\n    $rm_lstch() {\n        let lstch = _lstch(this)\n        return(_disconn(lstch))\n    }\n    $rm_which(index) {\n        let child = _which_child(index,this) \n        return(_disconn(child))\n    }\n    $rm_some_children(...indexes) {\n        let children = _some_children(this,...indexes)\n        return(children.map(child=>_disconn(child)))\n    }\n    $rm_all_children() {\n        let children = _children(this)\n        return(children.map(child=>_disconn(child)))\n    }\n    //\n    $dump() {\n        if(this.$is_root()) {\n            return(_dump(this))\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    $dump2file(fn) {\n        if(this.$is_root()) {\n            let ndict = _dump(this)\n            ndutil.wjson(fn,ndict)\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    //\n    $sdfs2mat() {\n        return(_sdfs2mat(_sdfs(this)))\n    }          \n}\n\n\n/**/\n\nfunction _set_id(nd) {\n    //root代表一棵树, 给每个节点加sdfs_seq\n    let tree = _sdfs(nd)\n    tree.forEach(\n        (nd,i) => {nd._id = i}\n    )\n    return(tree)\n}\n\n\nfunction _rtjson2rt(root) {\n    let rt = new Tree()\n    rt._id = root._id\n    rt.$guid = root._guid\n    return(rt)       \n}\n\nfunction _get_ancend_via_id(id,nd) {\n    while(nd._id !== id) {\n        nd=nd._parent\n    }\n    return(nd)\n}\n\nfunction fill_other_attrs_for_load(nd,d) {\n    let other_ks = get_non_struct_keys(d)\n    for(let k of other_ks) {\n        nd[k] = d[k]\n    }\n    return(nd)\n}\n\n\n\nfunction _load(ndict) {\n    //从一个json结构变成tree,返回root\n    let k = cmmn.dict_keys(ndict)[0]\n    let root = ndfunc.get_root(ndict[k],ndict)\n    let rt = _rtjson2rt(root)\n    rt = fill_other_attrs_for_load(rt,root)\n    let prnd = rt\n    let prnj = root\n    let nj = ndfunc.get_sdfs_next(prnj,ndict)\n    let nd;\n    while(nj!==null) {\n        if(prnj._fstch ===nj._id) {\n            nd = prnd.$prepend_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(prnj._rsib ===nj._id) {\n            nd = prnd.$add_rsib()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent!==null && nj._parent!==undefined) {\n            //lstch,并且上一個節點是drmost-of-lsib\n            let pid = nj._parent\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent===undefined){\n            //非lstch,并且上一個節點是drmost-of-lsib\n            let pnj = ndfunc.get_parent(nj,ndict)\n            let pid = pnj._id\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else {\n            console.log('Impossible',prnd,prnj,nj)\n        } \n    }\n    return(rt)\n}\n\nfunction _dictize_nd_property(nd,k) {\n    if(nd[k] === null) {\n        return(null)\n    } else if(nd[k] === undefined) {\n        return(undefined) \n    } else {\n        return(nd[k]._id)\n    }\n}\n\nfunction get_non_struct_keys(nd) {\n    let all_ks = cmmn.dict_keys(nd)\n    let other_ks = all_ks.filter(\n        r=>!(STRUCT_KEYS.includes(r))\n    )\n    return(other_ks)\n}\n\nfunction fill_other_attrs_for_dump(nd,d) {\n    let other_ks = get_non_struct_keys(nd)\n    for(let k of other_ks) {\n        d[k] = nd[k]\n    }\n    return(d)\n}\n\nfunction _dump(rt) {\n    //把一个nd结构变成json结构, 这个nd 相当于脱离了tree的一个deepcopy\n    let sdfs = _set_id(rt)\n    //let sdfs = rt.$sdfs()\n    let treeid = rt._id\n    let nodes_dict = {}\n    sdfs.forEach(\n        (nd,i) => {\n            let d = {}\n            d._tree = treeid\n            d._fstch = _dictize_nd_property(nd,'_fstch') \n            d._lsib = _dictize_nd_property(nd,'_lsib')\n            d._rsib = _dictize_nd_property(nd,'_rsib') \n            d._parent = _dictize_nd_property(nd,'_parent') \n            d._id = nd._id\n            d._guid = nd.$guid\n            //\n            d = fill_other_attrs_for_dump(nd,d)\n            //\n            nodes_dict[nd._id] = d\n        }\n    )\n    return(nodes_dict)\n}\n\n\nclass Tree extends _Node {\n    constructor() {\n        super();\n        //初始化为根节点,根节点代表一棵树\n        this._fstch = null\n        this._lsib = null\n        this._rsib = null\n        this._parent = null\n        this._tree = this\n    }\n    $is_parent_of(nd) {\n        let p = nd.$parent()\n        return(p===this)\n    }\n    $is_root_of(nd) {\n        let rt = nd.$root()\n        return(rt === this)\n    }\n    $is_descendant_of(nd) {\n        let deses = nd.$deses(false)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_descendant_of(nd) {\n        let deses = nd.$deses(true)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_ancestor_of(nd) {\n        let ances = nd.$ances(false)\n        let index = ances.indexOf(this)\n        return(index >=0)         \n    }\n    $is_inclusive_ancestor_of(nd) {\n        let ances = nd.$ances(true)\n        let index = ances.indexOf(this)\n        return(index >=0) \n    }\n    $is_sibling_of(nd) {\n        let sibs = nd.$sibs(false)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_siblings_of(nd) {\n        let sibs = nd.$sibs(true)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_preceding_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index>=0 && this_index < ndindex)\n    }\n    $is_following_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index > ndindex)\n    }\n    $is_first_child_of(nd) {\n        return(this === nd.$fstch())\n    }\n    $is_child_of(nd) {\n        let children = nd.$children()\n        let index = children.indexOf(this)\n        return(index>=0)\n    }\n    $is_last_child_of(nd) {\n        return(this === nd.$lstch())\n    }\n    $is_previous_sibling_of(nd) {\n        return(this === nd.$lsib())\n    }\n    $is_next_sibling_of(nd) {\n        return(this === nd.$rsib())\n    }\n    $index() {\n        return(this.$sibseq())    \n    } \n    $sdfs_index() {\n        let sdfs = this.$sdfs()\n        return(sdfs.indexOf(this))\n    }\n}\n\nfunction load(from) {\n    if(typeof(from) === 'string') {\n        let ndict = ndutil.rjson(from)\n        return(_load(ndict))\n    } else if(typeof(from) === 'object') {\n        let ndict = from\n        return(_load(ndict))\n    } else {\n        return(new Tree())\n    }\n}\n\nfunction clone(nd) {\n    let ndcit = nd.$dump()\n    return(load(ndict))\n}\n\nfunction _ele_struct_eq(ele0,ele1) {\n    return(\n        ele0._pbreadth === ele1._pbreadth &&\n        ele0._breadth === ele1._breadth &&\n        ele0._depth === ele1._depth\n    )\n}\n\nfunction struct_eq(tree0,tree1) {\n    let m0 = tree0.$sdfs2mat()\n    let m1 = tree1.$sdfs2mat()\n    let flat0 = Array.prototype.concat(...m0)\n    let flat1 = Array.prototype.concat(...m1)\n    if(flat0.length !== flat1.length) {\n        return(false)\n    } else {\n        for(let i=0;i<flat0.length;i++) {\n            if(_ele_struct_eq(flat0[i],flat1[i])) { } else {return(false)}\n        }\n    }\n    return(true)\n}\n\nmodule.exports = {\n    Node:_Node,\n    Tree:Tree,\n    Root:Tree,\n    load:load,\n    clone:clone,\n    struct_eq:struct_eq,\n}\n\n\n/*\nvar ndcls = require('./ndcls')\nvar sh=require('./ndfuncterm.js').sdfs_show_root_tree\n\nvar rt = ndcls.load('./TEST/ndict.json')\nsh(rt.$dump())\nvar sedfs = rt.$sedfs()\nrt.$sedfs_repr()\n\nvar sdfs = rt.$sdfs()\nvar m = rt.$sdfs2mat()\nassert.strictEqual(m[0][0]._nd.$guid,sdfs[0].$guid)\nassert.strictEqual(m[1][0]._nd.$guid,sdfs[1].$guid)\nassert.strictEqual(m[2][0]._nd.$guid,sdfs[2].$guid)\nassert.strictEqual(m[2][1]._nd.$guid,sdfs[3].$guid)\nassert.strictEqual(m[2][2]._nd.$guid,sdfs[6].$guid)\n\nfunction gen_tree() {\n    var tree = new ndcls.Root()\n    var nd1 = tree.$append_child()\n    var nd2 = nd1.$append_child()\n    var nd3 = nd1.$append_child() \n    var nd4 = nd3.$append_child()\n    var nd5 = nd4.$add_rsib() \n    var nd6 = nd1.$add_rsib()\n    var nd7 = nd6.$prepend_child()\n    var nd8 = nd6.$append_child()\n    var nd9 = nd6.$append_child()\n    nd9.$append_children(6)\n    sh(tree.$dump())\n}\n\n*/\n","//https://dom.spec.whatwg.org/#callbackdef-eventlistener\n\nclass EventListenerOptions {\n    constructor() {\n        this.capture = false    \n    }\n}\n\nclass AddEventListenerOptions extends EventListenerOptions {\n    constructor() {\n        this.passive = false\n        this.once = false\n    }\n}\n\nclass EventListener {\n    handleEvent(event) {\n    }\n}\n\n\nclass EventTarget {\n    constructor(){\n    }\n    addEventListener(type,callback,options={}) {\n    }\n    removeEventListener(type,callback,options={}) {\n    }\n    dispatchEvent(event) {\n    }\n}\n\n\n\nmodule.exports = {\n    EventTarget\n}\n","const ndfunc = require('./ndfunc.js')\nconst cmmn = require('./cmmn.js')\n\nconst dflt_sdfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'└── ',\n    'ws':'    '\n}\n\nconst dflt_edfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'┌── ',\n    'ws':'    '\n}\n\n\n\nfunction dflt_calc_conn_map_func(conn) {\n    let rslt;\n    if(conn==='t') {\n        rslt = 'v'\n    } else if(conn === 'v') {\n        rslt = 'v'\n    } else {\n        rslt = 'ws'\n    }\n    return(rslt)\n}\n\n\n\nfunction conns2repr(conns,show_connd) {\n    conns = conns.map(conn=>show_connd[conn])\n    return(conns.join(''))\n}\n\n\nfunction clear_ui(nodes) {\n    for(let id in nodes) {\n        delete nodes[id]._ui\n    }\n}\n\n//sdfs\n\nfunction dflt_sdfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n        nd._ui.display = true\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_lstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n        nd._ui.display = true\n    }\n    return(nd)\n}\n\n\n\nfunction get_sdfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let sdfs = ndfunc.get_deses(nd,nodes,true)\n    sdfs = sdfs.map(nd=>dflt_sdfs_calc_conns(nd,nodes))\n    let conns_array = sdfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_sdfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+'['+sdfs[i]._id+']'+' : '+sdfs[i]._guid))\n    arr = arr.filter((r,i)=>(sdfs[i]._ui.display === true))\n    return(arr)\n}\n\n\nfunction dflt_sdfs_show_callback() {\n}\n\n\nfunction sdfs_show_all(nd,nodes,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_root_tree(nodes,f=dflt_sdfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n\nfunction sdfs_show_from(nd,nodes,from,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_to(nd,nodes,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction sdfs_show_from_to(nd,nodes,from,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//\n\nfunction dflt_edfs_show_callback() {\n}\n\nfunction dflt_edfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_fstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n    }\n    return(nd)\n}\n\n\nfunction get_edfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let edfs = ndfunc.get_edfs(nd,nodes)\n    edfs.reverse()\n    edfs = edfs.map(nd=>dflt_edfs_calc_conns(nd,nodes))\n    edfs.reverse()\n    let deses = ndfunc.get_deses(nd,nodes,true)\n    let ids = deses.map(r=>r._id)\n    edfs = edfs.filter(r=>ids.includes(r._id))\n    let conns_array = edfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth,conns.length))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_edfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+edfs[i]._id))\n    return(arr)\n}\n\n\nfunction edfs_show_all(nd,nodes,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(root,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_root_tree(nodes,f=dflt_edfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_from(nd,nodes,from,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_to(nd,nodes,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction edfs_show_from_to(nd,nodes,from,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//sedfs\n\nconst dflt_sedfs_show_connd = {\n    indent:'    ',\n    stag_prefix:'<',\n    stag_suffix:'>',\n    etag_prefix:'</',\n    etag_suffix:'>',\n}\n\n\nfunction gen_tag(tag,prefix,suffix) {\n    return(prefix+tag+suffix)\n}\n\nfunction sedfs_show_all(nd,nodes,show_connd=dflt_sedfs_show_connd) {\n    let sedfs = ndfunc.get_sedfs(nd,nodes,true)\n    let depths = sedfs.map(nd=>ndfunc.get_depth(nd,nodes))\n    let depth = ndfunc.get_depth(nd,nodes)\n    let indents = depths.map(r=>show_connd.indent.repeat(r-depth)) \n    let tags = sedfs.map(\n        nd=>{\n            if(nd._$visited === false) {\n                return(gen_tag(nd._id,show_connd.stag_prefix,show_connd.stag_suffix))\n            } else {\n                return(gen_tag(nd._id,show_connd.etag_prefix,show_connd.etag_suffix))\n            }\n        }\n    )\n    let lines = tags.map((tag,i)=>(indents[i]+tag)) \n    let repr = lines.join('\\n')\n    console.log(repr)\n}\n\nfunction sdfs_expand(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = true})\n    return(nodes)\n}\n\nfunction sdfs_foldup(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = false})\n    return(nodes)\n}\n\n\nmodule.exports = {\n    dflt_calc_conn_map_func,\n    conns2repr,\n    clear_ui,\n    //sdfs\n    dflt_sdfs_show_connd,\n    dflt_sdfs_calc_conns,\n    get_sdfs_repr_arr,\n    sdfs_show_all,\n    sdfs_show_root_tree,\n    sdfs_show_from,\n    sdfs_show_to,\n    sdfs_show_from_to,\n    sdfs_expand,\n    sdfs_foldup,\n    //edfs\n    dflt_edfs_show_connd,\n    dflt_edfs_calc_conns,\n    get_edfs_repr_arr,\n    edfs_show_all,\n    edfs_show_root_tree,\n    edfs_show_from,\n    edfs_show_to,\n    edfs_show_from_to,\n    //sedfs\n    dflt_sedfs_show_connd,\n    gen_tag,\n    sedfs_show_all,           \n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"],"sourceRoot":""}